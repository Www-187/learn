#浮点类型
#使用范围比int类型更广

#问题1：FLOAT 和 DOUBLE 这两种数据类型的区别是啥呢？
#FLOAT 占用字节数少，取值范围小；DOUBLE 占用字节数多，取值范围也大。

#问题2：为什么浮点数类型的无符号数取值范围，只相当于有符号数取值范围的一半，也就是只相当于
/*有符号数取值范围大于等于零的部分呢？
MySQL 存储浮点数的格式为： 符号(S) 、 尾数(M) 和 阶码(E) 。因此，无论有没有符号，MySQL 的浮
点数都会存储表示符号的部分。因此， 所谓的无符号数取值范围，其实就是有符号数取值范围大于等于
零的部分。*/
#因此不用刻意声明浮点数的UNSIGNED

#1.1数据精度说明
/*MySQL允许使用 非标准语法 （其他数据库未必支持，因此如果涉及到数据迁移，则最好不要这么
用）： FLOAT(M,D) 或 DOUBLE(M,D) 。这里，M称为 精度 ，D称为 标度 。(M,D)中 M=整数位+小数
位，D=小数位。 D<=M<=255，0<=D<=30。
例如，定义为FLOAT(5,2)的一个列可以显示为-999.99-999.99。如果超过这个范围会报错。*/

#举例：

CREATE TABLE test_double1(
	f1 FLOAT,
	f2 FLOAT(5,2),
	f3 DOUBLE,
	f4 DOUBLE(5,2)
);

INSERT INTO test_double1(f1,f2)
VALUES(123.45,123.45);

SELECT *
FROM test_double1;

INSERT INTO test_double1(f3,f4)
VALUES(123.45,123.456);#如果小数位超出了规定，会四舍五入，即123.46
#如果此时存入1234.56，报错，不会存进去，与int区分开


#从MySQL 8.0.17开始，FLOAT(M,D) 和DOUBLE(M,D)用法在官方文档中已经明确不推荐使用，将来可
#能被移除。另外，关于浮点型FLOAT和DOUBLE的UNSIGNED也不推荐使用了，将来也可能被移除。

#浮点数存在精度误差：见课件
